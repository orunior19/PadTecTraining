///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace PadTecTrainingPartI.Modules.TabDataBase
{
    public partial class DatabaseResult
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        [UserCodeMethod]
        public void Validate_ListItemPerson(RepoItemInfo listitemInfo, string parFirstName, string parLastName, string parGender, string parAge, string parDepartment)
        {
        	// Exemple: "John Public (male, 48) Project Management"
        	// Report.Log(ReportLevel.Warn, "parFirstName value =>", parFirstName);
        	string resultPersonalizado = "";
        	string genderLowerCase = parGender.ToLower();
        	resultPersonalizado = (parFirstName + " " + parLastName + " (" + genderLowerCase + ", "+parAge+") "+parDepartment);
        	
        	Report.Log(ReportLevel.Warn, "String Personalizada:", resultPersonalizado);
        	
        	Report.Log(ReportLevel.Warn, "String Personalizada:", varValidadeResult);
        	
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$varValidadeResult) on item 'listitemInfo'.", listitemInfo);
            Validate.AttributeEqual(listitemInfo, "Text", resultPersonalizado);
        }
        
        [UserCodeMethod]
        public string retornaNome(RepoItemInfo listitemInfo, string varPerson)
        {
        	Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'RxMainFrame.RxTabStandard.TxtFirstName' and assigning its value to variable 'varPerson'.", repo.RxMainFrame.RxTabStandard.TxtFirstNameInfo, new RecordItemIndex(4));
            varPerson = repo.RxMainFrame.RxTabStandard.TxtFirstName.Element.GetAttributeValueText("Text");
            Delay.Milliseconds(0);
            return varPerson;
        }

    }
}
